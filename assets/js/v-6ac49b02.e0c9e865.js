"use strict";(self.webpackChunkroom_assistant=self.webpackChunkroom_assistant||[]).push([[436],{4794:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-6ac49b02",path:"/guide/quickstart-pi-zero-w.html",title:"Raspberry Pi Zero W",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[{level:3,title:"Hardware",slug:"hardware",children:[]},{level:3,title:"Software",slug:"software",children:[]}]},{level:2,title:"Installing Raspbian",slug:"installing-raspbian",children:[]},{level:2,title:"Installing room-assistant",slug:"installing-room-assistant",children:[]},{level:2,title:"Configuring room-assistant",slug:"configuring-room-assistant",children:[]},{level:2,title:"Making sure it always runs",slug:"making-sure-it-always-runs",children:[]}],filePathRelative:"guide/quickstart-pi-zero-w.md",git:{updatedTime:1632434165e3,contributors:[{name:"Heiko Rothe",email:"me@heikorothe.com",commits:1}]}}},9115:(n,e,a)=>{a.r(e),a.d(e,{default:()=>an});var s=a(6252),t=a(4734);const l=(0,s._)("h1",{id:"raspberry-pi-zero-w",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#raspberry-pi-zero-w","aria-hidden":"true"},"#"),(0,s.Uk)(" Raspberry Pi Zero W")],-1),i=(0,s._)("p",null,"This page will guide you through setting up a Pi Zero W to run room-assistant.",-1),o=(0,s._)("h2",{id:"requirements",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),(0,s.Uk)(" Requirements")],-1),r=(0,s._)("h3",{id:"hardware",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#hardware","aria-hidden":"true"},"#"),(0,s.Uk)(" Hardware")],-1),u=(0,s._)("ul",null,[(0,s._)("li",null,"Raspberry Pi Zero W + Power Supply"),(0,s._)("li",null,"Micro SD Card (ideally Application Class 1)"),(0,s._)("li",null,"SD Card reader")],-1),c=(0,s._)("h3",{id:"software",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#software","aria-hidden":"true"},"#"),(0,s.Uk)(" Software")],-1),p={href:"https://www.raspberrypi.org/software/",target:"_blank",rel:"noopener noreferrer"},d=(0,s.Uk)("Raspberry Pi Imager"),m=(0,s._)("h2",{id:"installing-raspbian",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#installing-raspbian","aria-hidden":"true"},"#"),(0,s.Uk)(" Installing Raspbian")],-1),b=(0,s._)("li",null,"Put your microSD card into your card reader.",-1),h=(0,s.Uk)("Open the "),_={href:"https://www.raspberrypi.org/software/",target:"_blank",rel:"noopener noreferrer"},k=(0,s.Uk)("Raspberry Pi Imager"),g=(0,s.Uk)(" and select the following options: "),f=(0,s._)("ol",null,[(0,s._)("li",null,"OS -> Raspberry Pi OS (other) -> Raspberry Pi OS (Lite)"),(0,s._)("li",null,"SD Card -> the SD card you put into your card reader"),(0,s._)("li",null,[(0,s.Uk)("Open the advanced options (Windows: "),(0,s._)("em",null,"Ctrl + Shift + X"),(0,s.Uk)(", macOS: "),(0,s._)("em",null,"Cmd + Shift + X"),(0,s.Uk)(") and enable SSH. Optionally, you can configure WiFi credentials, the hostname to be something recognizable like "),(0,s._)("code",null,"bedroom"),(0,s.Uk)(' and more in this same menu. Hit "Save" on the bottom after you\'re done.')])],-1),y=(0,s._)("li",null,"Write the image to the card from the main menu. Wait for it to be finished before removing the card from the reader.",-1),w=(0,s._)("li",null,"Insert the SD card into your Raspberry Pi Zero W, then connect the power supply. Wait a minute for it to boot and connect to your network.",-1),U=(0,s.Uk)("Open a SSH shell to "),v=(0,s._)("code",null,"<hostname>.local",-1),S=(0,s.Uk)(" (default: "),x=(0,s._)("code",null,"raspberrypi.local",-1),W=(0,s.Uk)(") with the user "),C=(0,s._)("code",null,"pi",-1),P=(0,s.Uk)(" and the password you configured (default: "),R=(0,s._)("code",null,"raspberry",-1),T=(0,s.Uk)("). On Windows you can use "),I={href:"https://www.putty.org",target:"_blank",rel:"noopener noreferrer"},O=(0,s.Uk)("Putty"),H=(0,s.Uk)(", with Linux and macOS you can just open the terminal and e.g. type "),q=(0,s._)("code",null,"ssh pi@raspberrypi.local",-1),A=(0,s.Uk)(". If the hostname is not found, use the IP of the Pi instead - it can be found in your router administration panel."),D=(0,s._)("h2",{id:"installing-room-assistant",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#installing-room-assistant","aria-hidden":"true"},"#"),(0,s.Uk)(" Installing room-assistant")],-1),Z=(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,"Now we install NodeJS by running"),(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s._)("span",{class:"token function"},"wget"),(0,s.Uk)(" -O - https://gist.githubusercontent.com/mKeRix/88b7b81e9bca044f74de1dc51696efb2/raw/799a20bca44cc61d8f8ae93878f2f28af8365a69/getNodeLTS.sh "),(0,s._)("span",{class:"token operator"},"|"),(0,s.Uk)(),(0,s._)("span",{class:"token function"},"bash"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("To make the commands we install with npm available the $PATH environment variable needs to be extended as well. Edit the file "),(0,s._)("code",null,"~/.profile"),(0,s.Uk)(" (e.g. with "),(0,s._)("code",null,"nano ~/.profile"),(0,s.Uk)(") and add the "),(0,s._)("code",null,'PATH="$PATH:/opt/nodejs/bin"'),(0,s.Uk)(" to the end of the file. Save, then run "),(0,s._)("code",null,"source ~/.profile"),(0,s.Uk)(".")])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("We need to install some other dependencies as well, do so by running "),(0,s._)("code",null,"sudo apt-get update && sudo apt-get install build-essential libavahi-compat-libdnssd-dev libsystemd-dev bluetooth libbluetooth-dev libudev-dev libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev"),(0,s.Uk)(".")])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("Now let's get install room-assistant! Run "),(0,s._)("code",null,"sudo npm i --global --unsafe-perm room-assistant"),(0,s.Uk)(". You will see messages like the one shown below during the installation process. Don't worry about them - they're not errors!")]),(0,s._)("p",null,[(0,s._)("img",{src:t,alt:"compilation messages"})])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s._)("em",null,"Optional:"),(0,s.Uk)(" If you want to run Bluetooth related integrations, you should also grant some additional permissions by executing the commands below.")]),(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s._)("span",{class:"token function"},"sudo"),(0,s.Uk)(" setcap cap_net_raw+eip "),(0,s._)("span",{class:"token variable"},[(0,s._)("span",{class:"token variable"},"$("),(0,s._)("span",{class:"token builtin class-name"},"eval"),(0,s.Uk)(" readlink -f `which node`"),(0,s._)("span",{class:"token variable"},")")]),(0,s.Uk)("\n"),(0,s._)("span",{class:"token function"},"sudo"),(0,s.Uk)(" setcap cap_net_raw+eip "),(0,s._)("span",{class:"token variable"},[(0,s._)("span",{class:"token variable"},"$("),(0,s._)("span",{class:"token builtin class-name"},"eval"),(0,s.Uk)(" readlink -f `which hcitool`"),(0,s._)("span",{class:"token variable"},")")]),(0,s.Uk)("\n"),(0,s._)("span",{class:"token function"},"sudo"),(0,s.Uk)(" setcap cap_net_admin+eip "),(0,s._)("span",{class:"token variable"},[(0,s._)("span",{class:"token variable"},"$("),(0,s._)("span",{class:"token builtin class-name"},"eval"),(0,s.Uk)(" readlink -f `which hciconfig`"),(0,s._)("span",{class:"token variable"},")")]),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br")])])])],-1),j=(0,s._)("h2",{id:"configuring-room-assistant",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#configuring-room-assistant","aria-hidden":"true"},"#"),(0,s.Uk)(" Configuring room-assistant")],-1),z=(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("Create a config folder for room-assistant with "),(0,s._)("code",null,"mkdir -p ~/room-assistant/config"),(0,s.Uk)(".")])],-1),L=(0,s.Uk)("Create a new config file with "),M=(0,s._)("code",null,"nano ~/room-assistant/config/local.yml",-1),N=(0,s.Uk)(" and put your room-assistant configuration in it. The example below configures the "),$=(0,s.Uk)("Home Assistant Core"),B=(0,s.Uk)(" and "),E=(0,s.Uk)("Bluetooth Classic"),Y=(0,s.Uk)(" integrations. If you want to use something else check out the "),Q=(0,s._)("a",{href:"/integrations"},"integrations",-1),X=(0,s.Uk)(" section."),F=(0,s.uE)('<div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">global</span><span class="token punctuation">:</span>\n  <span class="token key atrule">integrations</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> homeAssistant\n    <span class="token punctuation">-</span> bluetoothClassic\n<span class="token key atrule">homeAssistant</span><span class="token punctuation">:</span>\n  <span class="token key atrule">mqttUrl</span><span class="token punctuation">:</span> <span class="token string">&#39;mqtt://homeassistant.local:1883&#39;</span>\n  <span class="token key atrule">mqttOptions</span><span class="token punctuation">:</span>\n    <span class="token key atrule">username</span><span class="token punctuation">:</span> youruser\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> yourpass\n<span class="token key atrule">bluetoothClassic</span><span class="token punctuation">:</span>\n  <span class="token key atrule">addresses</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> &lt;bluetooth<span class="token punctuation">-</span>mac<span class="token punctuation">-</span>of<span class="token punctuation">-</span>device<span class="token punctuation">-</span>to<span class="token punctuation">-</span>track<span class="token punctuation">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',1),G=(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("Go to your room-assistant directory by executing "),(0,s._)("code",null,"cd ~/room-assistant"),(0,s.Uk)(".")])],-1),J=(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("Run room-assistant by executing "),(0,s._)("code",null,"room-assistant"),(0,s.Uk)(". Watch the logs - are all integrations are loaded correctly and is the MQTT connection succesful? Then congratulations, you configured room-assistant correctly! 🎉 New entities should now be appearing under the MQTT integration in Home Assistant Core, which can be viewed in Settings > Integrations.")])],-1),K=(0,s._)("div",{class:"custom-container tip"},[(0,s._)("p",{class:"custom-container-title"},"TIP"),(0,s._)("p",null,"When starting room-assistant you will see warnings about the Apple Bonjour compatibility layer of Avahi. These won't impact the functionality at all and can just be ignored.")],-1),V=(0,s._)("h2",{id:"making-sure-it-always-runs",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#making-sure-it-always-runs","aria-hidden":"true"},"#"),(0,s.Uk)(" Making sure it always runs")],-1),nn=(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,"If room-assistant is still running from the previous step, stop it by hitting Ctrl + C on your keyboard.")]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("Create a file using "),(0,s._)("code",null,"sudo nano /etc/systemd/system/room-assistant.service"),(0,s.Uk)(" with the following contents:")]),(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,"[Unit]\nDescription=room-assistant service\n\n[Service]\nType=notify\nExecStart=/opt/nodejs/bin/room-assistant\nWorkingDirectory=/home/pi/room-assistant\nTimeoutStartSec=120\nTimeoutStopSec=30\nRestart=always\nRestartSec=10\nWatchdogSec=60\nUser=pi\n\n[Install]\nWantedBy=multi-user.target\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"10"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"11"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"12"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"13"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"14"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"15"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"16"),(0,s._)("br")])])]),(0,s._)("li",null,[(0,s._)("p",null,"Enable and start your service by executing the commands below."),(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s._)("span",{class:"token function"},"sudo"),(0,s.Uk)(" systemctl "),(0,s._)("span",{class:"token builtin class-name"},"enable"),(0,s.Uk)(" room-assistant.service\n"),(0,s._)("span",{class:"token function"},"sudo"),(0,s.Uk)(" systemctl start room-assistant.service\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br")])])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("Congratulations, you are done! 🎊 You may check the status of the service at any time with "),(0,s._)("code",null,"sudo systemctl status room-assistant"),(0,s.Uk)(". room-assistant will now be started when the Pi Zero W boots.")])])],-1),en={},an=(0,a(3744).Z)(en,[["render",function(n,e){const a=(0,s.up)("OutboundLink"),t=(0,s.up)("RouterLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[l,i,o,r,u,c,(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("a",p,[d,(0,s.Wm)(a)])])]),m,(0,s._)("ol",null,[b,(0,s._)("li",null,[h,(0,s._)("a",_,[k,(0,s.Wm)(a)]),g,f]),y,w,(0,s._)("li",null,[U,v,S,x,W,C,P,R,T,(0,s._)("a",I,[O,(0,s.Wm)(a)]),H,q,A])]),D,Z,j,(0,s._)("ol",null,[z,(0,s._)("li",null,[(0,s._)("p",null,[L,M,N,(0,s.Wm)(t,{to:"/integrations/home-assistant.html"},{default:(0,s.w5)((()=>[$])),_:1}),B,(0,s.Wm)(t,{to:"/integrations/bluetooth-classic.html"},{default:(0,s.w5)((()=>[E])),_:1}),Y,Q,X]),F]),G,J]),K,V,nn],64)}]])},3744:(n,e)=>{e.Z=(n,e)=>{for(const[a,s]of e)n[a]=s;return n}},4734:(n,e,a)=>{n.exports=a.p+"assets/img/compilation-msgs.f118553e.png"}}]);