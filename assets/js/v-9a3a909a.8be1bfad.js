"use strict";(self.webpackChunkroom_assistant=self.webpackChunkroom_assistant||[]).push([[716],{9532:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-9a3a909a",path:"/integrations/gpio.html",title:"GPIO",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[{level:3,title:"Running with NodeJS",slug:"running-with-nodejs",children:[]},{level:3,title:"Running with Docker",slug:"running-with-docker",children:[]}]},{level:2,title:"Settings",slug:"settings",children:[{level:3,title:"Binary Sensors",slug:"binary-sensors",children:[]},{level:3,title:"Switches",slug:"switches",children:[]}]}],filePathRelative:"integrations/gpio.md",git:{updatedTime:1632254986e3,contributors:[{name:"Heiko Rothe",email:"me@heikorothe.com",commits:1}]}}},9231:(n,s,e)=>{e.r(s),e.d(s,{default:()=>U});var a=e(6252);const t=(0,a._)("h1",{id:"gpio",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#gpio","aria-hidden":"true"},"#"),(0,a.Uk)(" GPIO")],-1),r=(0,a.Uk)("The "),l={href:"https://en.wikipedia.org/wiki/General-purpose_input/output",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("general-purpose input/output"),i=(0,a.Uk)(" (GPIO) integration allows you to integrate devices that are directly connected to GPIO pins, for example "),p={href:"https://en.wikipedia.org/wiki/Passive_infrared_sensor",target:"_blank",rel:"noopener noreferrer"},u=(0,a.Uk)("PIR motion sensors"),c=(0,a.Uk)(". It makes uses of the "),d={href:"https://www.kernel.org/doc/Documentation/gpio/sysfs.txt",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("GPIO Sysfs Interface"),b=(0,a.Uk)(" and therefore only works on Linux."),m=(0,a.uE)('<h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><h3 id="running-with-nodejs" tabindex="-1"><a class="header-anchor" href="#running-with-nodejs" aria-hidden="true">#</a> Running with NodeJS</h3><p>The user under which room-assistant is running needs to have access to the GPIO pins. Under Raspbian this can be granted by adding the user to the <code>gpio</code> group:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> adduser <span class="token environment constant">$USER</span> gpio\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="running-with-docker" tabindex="-1"><a class="header-anchor" href="#running-with-docker" aria-hidden="true">#</a> Running with Docker</h3><p>The <code>/sys</code> folder of the host needs to be mapped into the container like shown below.</p><details class="custom-container details"><summary>Example docker-compose.yml</summary><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>\n<span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">room-assistant</span><span class="token punctuation">:</span>\n    <span class="token key atrule">image</span><span class="token punctuation">:</span> mkerix/room<span class="token punctuation">-</span>assistant\n    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> host\n    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> /var/run/dbus<span class="token punctuation">:</span>/var/run/dbus\n      <span class="token punctuation">-</span> /sys<span class="token punctuation">:</span>/sys\n    <span class="token key atrule">environment</span><span class="token punctuation">:</span>\n      <span class="token key atrule">NODE_CONFIG</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token scalar string">\n        {\n          &quot;global&quot;: {\n            &quot;instanceName&quot;: &quot;changeme&quot;,\n            &quot;integrations&quot;: [&quot;gpio&quot;]\n          },\n          &quot;gpio&quot;: {\n            &quot;binarySensors&quot;: [\n              { &quot;name&quot;: &quot;PIR Sensor&quot;, &quot;pin&quot;: 17 }\n            ]\n          }\n        }</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></details><h2 id="settings" tabindex="-1"><a class="header-anchor" href="#settings" aria-hidden="true">#</a> Settings</h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>binarySensors</code></td><td><a href="#binary-sensors">GPIO Binary Sensors</a></td><td></td><td>Array of binary sensor configurations.</td></tr><tr><td><code>switches</code></td><td><a href="#switches">GPIO Switches</a></td><td></td><td>Array of switch configurations.</td></tr></tbody></table><h3 id="binary-sensors" tabindex="-1"><a class="header-anchor" href="#binary-sensors" aria-hidden="true">#</a> Binary Sensors</h3>',10),k=(0,a._)("thead",null,[(0,a._)("tr",null,[(0,a._)("th",null,"Name"),(0,a._)("th",null,"Type"),(0,a._)("th",null,"Default"),(0,a._)("th",null,"Description")])],-1),g=(0,a._)("tr",null,[(0,a._)("td",null,[(0,a._)("code",null,"name")]),(0,a._)("td",null,"String"),(0,a._)("td"),(0,a._)("td",null,"Friendly name for this sensor.")],-1),y=(0,a._)("tr",null,[(0,a._)("td",null,[(0,a._)("code",null,"pin")]),(0,a._)("td",null,"Number"),(0,a._)("td"),(0,a._)("td",null,"Number of the GPIO pin that should be tracked.")],-1),f=(0,a._)("td",null,[(0,a._)("code",null,"deviceClass")],-1),_=(0,a._)("td",null,"String",-1),w=(0,a._)("td",null,null,-1),v=(0,a.Uk)("Home Assistant Core "),q={href:"https://www.home-assistant.io/integrations/binary_sensor/#device-class",target:"_blank",rel:"noopener noreferrer"},S=(0,a.Uk)("device class"),x=(0,a.Uk)(" that the sensor should be shown as."),I=(0,a.uE)('<h3 id="switches" tabindex="-1"><a class="header-anchor" href="#switches" aria-hidden="true">#</a> Switches</h3><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td>String</td><td></td><td>Friendly name for this sensor.</td></tr><tr><td><code>pin</code></td><td>Number</td><td></td><td>Number of the GPIO pin that should be used as output.</td></tr><tr><td><code>icon</code></td><td>String</td><td></td><td>Icon to display for the switch in the Home Assistant Core frontend.</td></tr></tbody></table><details class="custom-container details"><summary>Example Config</summary><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">global</span><span class="token punctuation">:</span>\n  <span class="token key atrule">integrations</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> gpio\n<span class="token key atrule">gpio</span><span class="token punctuation">:</span>\n  <span class="token key atrule">binarySensors</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Bedroom Motion Sensor\n      <span class="token key atrule">pin</span><span class="token punctuation">:</span> <span class="token number">17</span>\n      <span class="token key atrule">deviceClass</span><span class="token punctuation">:</span> motion\n  <span class="token key atrule">switches</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> LED\n      <span class="token key atrule">pin</span><span class="token punctuation">:</span> <span class="token number">18</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></details>',3),P={},U=(0,e(3744).Z)(P,[["render",function(n,s){const e=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,(0,a._)("p",null,[r,(0,a._)("a",l,[o,(0,a.Wm)(e)]),i,(0,a._)("a",p,[u,(0,a.Wm)(e)]),c,(0,a._)("a",d,[h,(0,a.Wm)(e)]),b]),m,(0,a._)("table",null,[k,(0,a._)("tbody",null,[g,y,(0,a._)("tr",null,[f,_,w,(0,a._)("td",null,[v,(0,a._)("a",q,[S,(0,a.Wm)(e)]),x])])])]),I],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[e,a]of s)n[e]=a;return n}}}]);